<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>netcoreapp2.0;netstandard2.0;net451</TargetFrameworks>
    <PackageId>EntityWorker.Core</PackageId>
    <AssemblyName>EntityWorker.Core</AssemblyName>
    <AssemblyVersion>2.0.3.1</AssemblyVersion>
    <FileVersion>2.0.3.1</FileVersion>
    <Version>2.3.1</Version>
    <Authors>Alen Toma</Authors>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageProjectUrl>https://github.com/AlenToma/EntityWorker.Core</PackageProjectUrl>
    <PackageTags>Entity EntityWorker.Core sql object-relation mappar LinqToSql alternative-to-entityframework C# System.Reflection generic Microsoft EntityFramework EF Database Data O/RM ADO.NET sqlite postgres postgressql</PackageTags>
    <PackageLicenseUrl>https://raw.githubusercontent.com/AlenToma/EntityWorker.Core/master/LICENSE</PackageLicenseUrl>
    <Copyright>Copyright (c) 2017 Alen Toma</Copyright>
    <Description>EntityWorker is an object-relation mapper(ORM) that enable .NET developers to work with relations data using objects. EntityWorker is an alternative to entityframwork. is more flexible and much faster than entity framework.
And it have support to multiple providers like mssql, sqlite and postgressql
</Description>
    <NeutralLanguage />
    <PackageIconUrl>https://raw.githubusercontent.com/AlenToma/EntityWorker.Core/master/icon.gif</PackageIconUrl>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <!--<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);IncludeP2POutput;</TargetsForTfmSpecificBuildOutput>-->
    <!--<TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);CustomContentTarget</TargetsForTfmSpecificContentInPackage>-->
    <PackageReleaseNotes>Expression improvement</PackageReleaseNotes>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>7.2</LangVersion>
  </PropertyGroup>

  <!--<ItemGroup Condition="'$(Configuration)'=='Release'">
    <Content Include="NetFramwork Build/**" PackagePath="build/" CopyToPublishDirectory="Always" />
    <Content Include="NetCore Build/**" PackagePath="lib/" CopyToPublishDirectory="Always" />
  </ItemGroup>-->

  <!--<ItemGroup Condition="'$(Configuration)'=='Release'">
    <Content Include="build/**" PackagePath="build/" CopyToPublishDirectory="Always" />
  </ItemGroup>-->

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <DocumentationFile>bin\Release\$(TargetFramework)\EntityWorker.Core.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|netcoreapp2.0|x86'">
    <WarningsAsErrors>NU1605</WarningsAsErrors>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="%2a%2a\**" />
    <EmbeddedResource Remove="%2a%2a\**" />
    <None Remove="%2a%2a\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="System.Data.SqlClient" Version="4.5.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.0'">
    <Reference Include="System.Transactions"></Reference>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="System.Reflection.Emit" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net451'">
    <Reference Include="System.Transactions"></Reference>
    <Reference Include="System.DirectoryServices" Pack="false" />
    <Reference Include="System.Security" />
    <Reference Include="System.Configuration" />
  </ItemGroup>


  <!--<ItemGroup Condition="'$(Configuration)'=='Debug'">
    <Content Include="SQLite.Interop.dll">
      <PackagePath>build/</PackagePath>
      <CopyToPublishDirectory>Always</CopyToPublishDirectory>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>-->

  <!--<Target Name="IncludeP2POutput">
    <ItemGroup Condition="'$(Configuration)'=='Release'">
      <BuildOutputInPackage Include="..\EntityWorker.SQLite\bin\Release\$(TargetFramework)\EntityWorker.SQLite.dll" />
      <BuildOutputInPackage Include="..\EntityWorker.SQLite\bin\Release\$(TargetFramework)\EntityWorker.SQLite.xml" />
      <BuildOutputInPackage Condition="Exists('..\EntityWorker.SQLite\bin\Release\$(TargetFramework)\EntityWorker.SQLite.dll.config')" Include="..\EntityWorker.SQLite\bin\Release\$(TargetFramework)\EntityWorker.SQLite.dll.config" />
      <BuildOutputInPackage Condition="Exists('..\EntityWorker.SQLite\bin\Release\$(TargetFramework)\EntityWorker.SQLite.deps.json')" Include="..\EntityWorker.SQLite\bin\Release\$(TargetFramework)\EntityWorker.SQLite.deps.json" />


      <BuildOutputInPackage Include="..\..\..\FastDeepCloner\source\bin\Release\$(TargetFramework)\FastDeepCloner.dll" />
      <BuildOutputInPackage Include="..\..\..\FastDeepCloner\source\bin\Release\$(TargetFramework)\FastDeepCloner.xml" />
      <BuildOutputInPackage Condition="Exists('..\..\..\FastDeepCloner\source\bin\Release\$(TargetFramework)\FastDeepCloner.dll.config')" Include="..\..\..\FastDeepCloner\source\bin\Release\$(TargetFramework)\FastDeepCloner.dll.config" />
      <BuildOutputInPackage Condition="Exists('..\..\..\FastDeepCloner\source\bin\Release\$(TargetFramework)\FastDeepCloner.deps.json')" Include="..\..\..\FastDeepCloner\source\bin\Release\$(TargetFramework)\FastDeepCloner.deps.json" />
    </ItemGroup>
  </Target>-->

  <!--<Target Name="CustomContentTarget">
    <ItemGroup Condition="'$(Configuration)'=='Release'">
      <TfmSpecificPackageFile Condition="Exists('bin\Release\$(TargetFramework)\EntityWorker.xml')" Include="bin\Release\$(TargetFramework)\EntityWorker.xml">
        <PackagePath>build\$(TargetFramework)\EntityWorker.xml</PackagePath>
      </TfmSpecificPackageFile>
    </ItemGroup>
  </Target>-->



</Project>